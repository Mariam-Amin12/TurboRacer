;THE FUNCTIONALITY OF THIS CODE IS DRAWING THE CAR


PUBLIC CheckColisionCar1
PUBLIC CheckColisionCar2
EXTRN HEIGHT1:WORD
EXTRN WIDTH1:WORD
EXTRN CENTER1:WORD
EXTRN STATE1:BYTE
EXTRN EXPECTEDSTATE1:BYTE
EXTRN CANMOVE1:BYTE
EXTRN HEIGHT2:WORD
EXTRN WIDTH2:WORD
EXTRN CENTER2:WORD
EXTRN STATE2:BYTE
EXTRN EXPECTEDSTATE2:BYTE
EXTRN CANMOVE2:BYTE
.MODEL SMALL
.STACK 64
.CODE

CheckColisionCar1 PROC FAR
CMP EXPECTEDSTATE1 , 0      
JNZ RIGHT1
;PERFORM EQUATION CENTER-(WIDTH/2)-(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320          
MOV AX,HEIGHT1
shr AX,1
INC AX
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH1
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER1
SUB BX ,AX
POP AX
SUB BX,AX

MOV AX,BX

UPROW1:
MOV SI,AX
MOV CX,WIDTH1


LOOP11:
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVEUP1   ; ->THIS PIXEL HAS COLOUR OF THE OBSTACLE SO CAR CAN'T MOVE
INC SI
LOOP LOOP11
MOV AL,1
MOV CANMOVE1,AL
JMP EXIT1

CANTMOVEUP1:
MOV AL,0
MOV CANMOVE1,AL
JMP EXIT1


RIGHT1:
CMP EXPECTEDSTATE1 , 1
JNZ LEFT1
;PERFORM EQUATION CENTER-(WIDTH*320/2)+(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP RIGHT IN THE SCREEN)
;CALCULATE (HEIGHT/2) TERM
MOV AX , HEIGHT1
shr AX,1
INC AX
PUSH AX

;CALCULATE WIDTH*320/2 TERM
MOV BX,320
MOV AX,WIDTH1
shr AX,1
MUL BX

;GET THE REQUIRED POINT
MOV BX , CENTER1
SUB BX ,AX
POP AX
ADD BX,AX

MOV AX,BX

RIGHTCOLUMN1:
MOV SI,AX
MOV CX,WIDTH1

LOOP12:
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVERIGHT1
ADD SI,320
LOOP LOOP12
MOV AL,1
MOV CANMOVE1,AL
JMP EXIT1

CANTMOVERIGHT1:
MOV AL,0
MOV CANMOVE1,AL
JMP EXIT1



LEFT1:
CMP EXPECTEDSTATE1,2
JNZ DOWN1

;PERFORM EQUATION CENTER+(WIDTH*320/2)-(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (BOTTOM LEFT IN THE SCREEN)
;CALCULATE (HEIGHT/2) TERM
MOV AX , HEIGHT1
shr AX,1
INC AX
PUSH AX

;CALCULATE WIDTH*320/2 TERM
MOV BX,320
MOV AX,WIDTH1
shr AX,1
MUL BX

;GET THE REQUIRED POINT
MOV BX , CENTER1
ADD BX ,AX
POP AX
SUB BX,AX


MOV AX,BX


LEFTCOLUMN1:
MOV SI,AX
MOV CX,WIDTH1

LOOP13: 
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVELEFT1
SUB SI,320
LOOP LOOP13
MOV AL,1
MOV CANMOVE1,AL
JMP EXIT1

CANTMOVELEFT1:
MOV AL,0
MOV CANMOVE1,AL
JMP EXIT1

DOWN1:
;PERFORM EQUATION CENTER+(WIDTH/2)+(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320
MOV AX,HEIGHT1
shr AX,1
INC AX
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH1
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER1
ADD BX ,AX
POP AX
ADD BX,AX


MOV AX,BX


DOWNROW1:
MOV SI,AX
MOV CX,WIDTH1

LOOP14:
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVEDOWN1
DEC SI
LOOP LOOP14
MOV AL,1
MOV CANMOVE1,AL
JMP EXIT1

CANTMOVEDOWN1:
MOV AL,0
MOV CANMOVE1,AL
JMP EXIT1
EXIT1:
RET
CheckColisionCar1 ENDP
;;;;;;;;;;;;;;;;;;;;;;
;////////////////////;
;;;;;;;;;;;;;;;;;;;;;;
CheckColisionCar2 PROC FAR
CMP EXPECTEDSTATE2 , 0      
JNZ RIGHT2
;PERFORM EQUATION CENTER-(WIDTH/2)-(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320          
MOV AX,HEIGHT2
shr AX,1
INC AX
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH2
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER2
SUB BX ,AX
POP AX
SUB BX,AX

MOV AX,BX

UPROW2:
MOV SI,AX
MOV CX,WIDTH2


LOOP21:
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVEUP2   ; ->THIS PIXEL HAS COLOUR OF THE OBSTACLE SO CAR CAN'T MOVE
INC SI
LOOP LOOP21
MOV AL,1
MOV CANMOVE2,AL
JMP EXIT2

CANTMOVEUP2:
MOV AL,0
MOV CANMOVE2,AL
JMP EXIT2


RIGHT2:
CMP EXPECTEDSTATE2 , 1
JNZ LEFT2
;PERFORM EQUATION CENTER-(WIDTH*320/2)+(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP RIGHT IN THE SCREEN)
;CALCULATE (HEIGHT/2) TERM
MOV AX , HEIGHT2
shr AX,1
INC AX
PUSH AX

;CALCULATE WIDTH*320/2 TERM
MOV BX,320
MOV AX,WIDTH2
shr AX,1
MUL BX

;GET THE REQUIRED POINT
MOV BX , CENTER2
SUB BX ,AX
POP AX
ADD BX,AX

MOV AX,BX

RIGHTCOLUMN2:
MOV SI,AX
MOV CX,WIDTH2

LOOP22:
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVERIGHT2
ADD SI,320
LOOP LOOP22
MOV AL,1
MOV CANMOVE2,AL
JMP EXIT2

CANTMOVERIGHT2:
MOV AL,0
MOV CANMOVE2,AL
JMP EXIT2



LEFT2:
CMP EXPECTEDSTATE2,2
JNZ DOWN2

;PERFORM EQUATION CENTER+(WIDTH*320/2)-(HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (BOTTOM LEFT IN THE SCREEN)
;CALCULATE (HEIGHT/2) TERM
MOV AX , HEIGHT2
shr AX,1
INC AX
PUSH AX

;CALCULATE WIDTH*320/2 TERM
MOV BX,320
MOV AX,WIDTH2
shr AX,1
MUL BX

;GET THE REQUIRED POINT
MOV BX , CENTER2
ADD BX ,AX
POP AX
SUB BX,AX


MOV AX,BX


LEFTCOLUMN2:
MOV SI,AX
MOV CX,WIDTH2

LOOP23: 
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVELEFT2
SUB SI,320
LOOP LOOP23
MOV AL,1
MOV CANMOVE2,AL
JMP EXIT2

CANTMOVELEFT2:
MOV AL,0
MOV CANMOVE2,AL
JMP EXIT2

DOWN2:
;PERFORM EQUATION CENTER+(WIDTH/2)+(320*HEIGHT/2) TO GET TOP LEFT POINT OF THE CAR (TOP LEFT IN THE SCREEN)
;CALCULATE (320*HEIGHT/2) TERM
MOV BX,320
MOV AX,HEIGHT2
shr AX,1
INC AX
MUL BX
PUSH AX

;CALCULATE WIDTH/2 TERM
MOV AX , WIDTH2
shr AX,1

;GET THE REQUIRED POINT
MOV BX , CENTER2
ADD BX ,AX
POP AX
ADD BX,AX


MOV AX,BX


DOWNROW2:
MOV SI,AX
MOV CX,WIDTH2

LOOP24:
MOV AL, [ES:[SI]]
CMP AL,10
JZ CANTMOVEDOWN2
DEC SI
LOOP LOOP24
MOV AL,1
MOV CANMOVE2,AL
JMP EXIT2

CANTMOVEDOWN2:
MOV AL,0
MOV CANMOVE2,AL
JMP EXIT2
EXIT2:
RET
CheckColisionCar2 ENDP
END 
